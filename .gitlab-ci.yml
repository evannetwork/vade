image: rust:latest

stages:
  - build
  - test_unit

build:
  stage: build
  script:
    - apt-get update
    - apt-get install -y clang
    - cargo build --release --verbose
  artifacts:
    paths:
      - ./target
    expire_in: 1 hour

run_unit_tests:
  stage: test_unit
  script:
    - apt-get update
    - apt-get install -y clang
    - cargo install cargo2junit
    - rm -rf vade-unit-report && rm -f junit.xml
    - cargo test --release --verbose -- -Z unstable-options --format json --report-time | cargo2junit > junit.xml
  after_script:
    - cat junit.xml
    - mkdir vade-unit-report
    - mv junit.xml vade-unit-report/
    - echo uploading results if \"$CI_COMMIT_REF_NAME\" equals \"develop\"
  cache:
    when: always
    key: vade-unit-report
    paths:
      - vade-unit-report

upload-xray-results:
  stage: test_unit
  needs:
    - run_unit_tests
  tags:
    - regression-tests
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'
      when: always
    - when: never
  script:
    - 'export AUTHTOKEN=$(curl -X POST -H "Content-Type: application/json" -d "{ \"client_id\": \"${id_client}\", \"client_secret\": \"${id_secret}\" }" "https://xray.cloud.xpand-it.com/api/v2/authenticate" | sed -e "s/\"//g")'
    - 'curl -X POST -H "Content-Type: text/xml" -H "Authorization: Bearer ${AUTHTOKEN}" -d @"vade-unit-report/junit.xml" "https://xray.cloud.xpand-it.com/api/v2/import/execution/junit?projectKey=DID&testPlanKey=${test_plan}&testExecKey=${test_execution}"'
  cache:
    key: vade-unit-report
    paths:
      - vade-unit-report
  artifacts:
    paths:
      - vade-unit-report/junit.xml
    expire_in: 1 week
